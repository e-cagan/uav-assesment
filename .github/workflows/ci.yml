name: UAV Assessment CI

on:
  push:
    branches: [ main ]
  pull_request:
  workflow_dispatch:

env:
  DOCKER_IMAGE: uav-assessment-env:ci

jobs:
  sim-tests:
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout
        uses: actions/checkout@v4

      - name: 🛠️ Set up Buildx (container driver)
        id: buildx
        uses: docker/setup-buildx-action@v3
        with:
          install: true
          driver: docker-container
          buildkitd-flags: --debug

      - name: 🐳 Build image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          tags: ${{ env.DOCKER_IMAGE }}
          load: true
          builder: ${{ steps.buildx.outputs.name }}
          cache-from: type=gha
          cache-to:   type=gha,mode=max

      - name: 🔧 Make scripts executable
        run: chmod +x run_sitl.sh run_mavros.sh

      # ---- MAVROS Smoke (isteğe bağlı, hızlı doğrulama) ----
      - name: 🧪 MAVROS smoke
        id: mavros_smoke
        continue-on-error: true
        run: |
          docker run --rm -t -v "$PWD":/ws -w /ws ${{ env.DOCKER_IMAGE }} bash -lc '
            set -e
            ./run_sitl.sh
            (./run_mavros.sh 14540 > /tmp/mavros.log 2>&1 &) 
            # /mavros/state topic'ini bekle
            for i in {1..30}; do
              if ros2 topic list | grep -q "/mavros/state"; then
                echo "[OK] MAVROS up"
                exit 0
              fi
              sleep 0.5
            done
            echo "[ERR] MAVROS not up"
            exit 1
          '

      # ---------- TASK 1 ----------
      - name: 🚀 Run Task 1 – Arm/Disarm
        id: task1
        continue-on-error: true
        run: |
          mkdir -p .ci_artifacts
          docker run --rm -t \
            -e FORCE_RUN=1 \
            -v "$PWD":/ws -w /ws ${{ env.DOCKER_IMAGE }} bash -lc '
              set -e
              colcon build --symlink-install --packages-select candidate_package test_package
              source install/setup.bash
              ./run_sitl.sh

              python3 -m pytest -c src/test_package/setup.cfg \
                -k "test_task_1_arm_disarm" -s -vv src/test_package/test \
                --junit-xml build/test_package/pytest_task1.xml

              mkdir -p /ws/.ci_artifacts
              cp /tmp/sitl.log /ws/.ci_artifacts/task1_sitl.log || true
              cp build/test_package/pytest_task1.xml /ws/.ci_artifacts/pytest_task1.xml || true
            '

      # ---------- TASK 2 ----------
      - name: 🛫 Run Task 2 – Takeoff/Land
        id: task2
        continue-on-error: true
        run: |
          docker run --rm -t \
            -e FORCE_RUN=1 \
            -v "$PWD":/ws -w /ws ${{ env.DOCKER_IMAGE }} bash -lc '
              set -e
              colcon build --symlink-install --packages-select candidate_package test_package
              source install/setup.bash
              ./run_sitl.sh

              python3 -m pytest -c src/test_package/setup.cfg \
                -k "test_task_2_takeoff_land" -s -vv src/test_package/test \
                --junit-xml build/test_package/pytest_task2.xml

              mkdir -p /ws/.ci_artifacts
              cp /tmp/sitl.log /ws/.ci_artifacts/task2_sitl.log || true
              cp build/test_package/pytest_task2.xml /ws/.ci_artifacts/pytest_task2.xml || true
            '

      - name: 📎 Upload artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: ci-artifacts
          path: .ci_artifacts

      - name: 📝 Summary
        if: always()
        run: |
          echo "## 🛩️ UAV Assessment Results" >> "$GITHUB_STEP_SUMMARY"
          echo >> "$GITHUB_STEP_SUMMARY"
          echo "- MAVROS smoke: **${{ steps.mavros_smoke.outcome }}**" >> "$GITHUB_STEP_SUMMARY"
          echo "- Task 1 (Arm/Disarm): **${{ steps.task1.outcome }}**" >> "$GITHUB_STEP_SUMMARY"
          echo "- Task 2 (Takeoff/Land): **${{ steps.task2.outcome }}**" >> "$GITHUB_STEP_SUMMARY"
          echo >> "$GITHUB_STEP_SUMMARY"
          echo "### Task 1 – SITL log (tail)" >> "$GITHUB_STEP_SUMMARY"
          [ -f .ci_artifacts/task1_sitl.log ] && tail -n 40 .ci_artifacts/task1_sitl.log >> "$GITHUB_STEP_SUMMARY" || echo "(no log)" >> "$GITHUB_STEP_SUMMARY"
          echo >> "$GITHUB_STEP_SUMMARY"
          echo "### Task 2 – SITL log (tail)" >> "$GITHUB_STEP_SUMMARY"
          [ -f .ci_artifacts/task2_sitl.log ] && tail -n 40 .ci_artifacts/task2_sitl.log >> "$GITHUB_STEP_SUMMARY" || echo "(no log)" >> "$GITHUB_STEP_SUMMARY"

      # herhangi biri fail ise job'ı düşür
      - name: ❌ Fail job if any task failed
        if: ${{ always() && (steps.mavros_smoke.outcome == 'failure' || steps.task1.outcome == 'failure' || steps.task2.outcome == 'failure') }}
        run: exit 1
